select * from user_tables;//here with this condition we can see all the table in db
--but with some condition u can get the table that u created previously
select * from user_tables where HAS_IDENTITY='YES';

select * from products;
select * from products where rownum<=5;
insert into products(prod_name,cust_id) values('Phone',4);

--rank methods it's function so i give parantheses()
select prod_name,rank() over( order by prod_name desc) as Prod_rank from products; //it will print all rank value 

select prod_name,dense_rank() over( order by prod_name desc) as Prod_rank from products; // dense_rank

select distinct(prod_name),dense_rank() over( order by prod_name desc) as Prod_rank from products;//distinct remove all dublicates values

select distinct(prod_name),dense_rank() over( order by prod_name desc) as Prod_rank from products;//distinct remove all dublicates values

--rank and dense_rank is an analitical functions

select distinct(prod_name),dense_rank() over( order by prod_name desc) as Prod_rank from products  where rownum<=15;
select distinct(prod_name) from products  where rownum<=10; //the rownum whill check the rownum value from default table values here
select (prod_name),dense_rank() over(order by prod_name) from products  where rownum<=10;

--group by 
--group by only used with aggrigate function like maths counts sum 
select count(prod_name) as Count_Of_Name,prod_name from products GROUP by prod_name;
--the group by is with some particular senario we find the members count in particular table that is group by
select count(prod_name) as Count_Of_Name,prod_name,prod_id from products GROUP by prod_name,prod_id;

select count(prod_name) as Count_Of_Name,prod_name,cust_Id from products GROUP by prod_name,cust_Id;
--if we want to print another coloum in group by we need to use it in group by then only we get the output
select count(prod_name) as Count_Of_Name,prod_name,cust_id from products GROUP by prod_name,cust_id; 

--we can use group by whit order by also
select count(prod_name) as Count,prod_name from products group by prod_name order by count asc;

--having methods when we use group by the 'where' is not working,then we use 'having' instead of where
select prod_name,cust_id,count(prod_name)as count from products group by prod_name,cust_id having prod_name ='porur';
select count(prod_name)as count from products group by prod_name where prod_name ='Phone'; //where is not work here

select * from products where prod_name in('Phone','Porur','bus');//in operator is used to give multiple value to check

select * from products where prod_name in('Phone','Porur','porur') and prod_id BETWEEN 22 and 54;//between only used for number only 

select * from products where prod_name in('Phone','Laptop','phone') OR prod_id BETWEEN 4 and 6;

--view is nothing but we create bunch of sql queries as a table whenever we want we used to display is using reference name v_prod
create or replace view v_prod as select * from products where prod_name in('Phone','bus');
select * from v_prod;
create or replace view v_pd as select prod_name as Product from products where prod_name in('Phone','phone');
select * from v_pd;
create or replace view subject as select * from marksheet where subject='computer science';
select * from subject;

select * from marksheet;

--to set two table value into one table here
create table product2(
prod_id int GENERATED BY default as identity,
prod_name varchar(30),
ent_dt timestamp default systimestamp
);
insert into product2(prod_name)values('van');

desc product2;
select * from product2;
select * from products;

drop table product2;


--it will copy all the value into each table u can add all value to each table with this query
insert into product2(prod_name) select prod_name from products;
select * from product2;

insert into product2(prod_name) select prod_name from products where prod_name='Phone';

select * from products;

--Group by, order by, rank, dense_rank, having,between,view,in,insert into select,Rownum

select (10+30)as ADITION,(10*4)as MULTIPILICATION from dual;

select ceil(10.30),floor(10.9)from dual;

select floor(10.30),(10.9)from dual;

select round(10.34560,3)from dual;

select * from products;
--nvl is act if any value is null it will print the value we give in ''
select nvl(null,'default') from dual;//nvl is only accept two parameter
--but coalesce is check the null value until the original value is araived
select coalesce(null,null,'Pokesh',null,null,null,'dinesh',null) as coalesce from dual;//but coalesce is accept many parameter

select trunc(12.34657,2) from dual;

select  nvl(cust_id ,'10') as NVL ,coalesce(null,null,cust_id) as coalesce from products;

--nvl2 will print the 2nd value if the 1st value is not null, if the 1st value is null then it will print the 3rd value
select nvl2(null,'Hello','Hii') as result from dual;

--if both are same it will return a null value
select nullif('Pokesh','Dinesh')as NullIf from dual;

--it will find out the first not null expresion here if any not null value is find by the coalesce function it will return the not null function
select cust_id,coalesce(null,cust_id,null,null,null)from products;//but coalesce is accept many parameter


commit;




